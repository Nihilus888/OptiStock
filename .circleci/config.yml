version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.9-node
      - image: circleci/postgres:latest
        environment:
          POSTGRES_DB: portfolio
          POSTGRES_USER: elliotttay
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - checkout
      - run:
          name: Set Up Python Virtual Environment
          command: |
            python -m venv venv  # Create a virtual environment
            . venv/bin/activate  # Activate the virtual environment
            pip install -r requirements.txt  # Install Django dependencies

      - run:
          name: Wait for PostgreSQL
          command: |
            echo "Waiting for PostgreSQL to start..."
            for i in {30..0}; do
              if pg_isready -h localhost -p 5432; then
                echo "PostgreSQL is up!"
                break
              fi
              echo "PostgreSQL is unavailable - waiting..."
              sleep 1
            done

      - run:
          name: Migrate Database
          command: |
            . venv/bin/activate  # Activate the virtual environment
            python manage.py migrate  # Run migrations

  test:
    docker:
      - image: circleci/python:3.9-node
      - image: circleci/postgres:latest
    steps:
      - checkout
      - run:
          name: Set Up Python Virtual Environment
          command: |
            python -m venv venv  # Create a virtual environment
            . venv/bin/activate  # Activate the virtual environment
            pip install -r requirements.txt  # Install Django dependencies

      - run:
          name: Run Django Tests
          command: |
            . venv/bin/activate  # Activate the virtual environment
            python manage.py test  # Run Django tests

      - run:
          name: Run Frontend Tests
          command: |
            cd portfolioOptimizer
            npm test -- --watchAll=false  # Run frontend tests

  deploy:
    docker:
      - image: circleci/python:3.9-node
    steps:
      - checkout
      - run:
          name: Deploy Application
          command: |
            # Your deployment commands here

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
